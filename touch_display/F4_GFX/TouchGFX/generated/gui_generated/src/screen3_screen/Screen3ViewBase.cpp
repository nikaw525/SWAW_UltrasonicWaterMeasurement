/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen3_screen/Screen3ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

Screen3ViewBase::Screen3ViewBase() :
    buttonCallback(this, &Screen3ViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &Screen3ViewBase::flexButtonCallbackHandler)
{

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    box1.setPosition(0, 0, 480, 272);
    box1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND3_ID));

    go_slide_1.setXY(355, 14);
    go_slide_1.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_HOME_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_HOME_32_ID));
    go_slide_1.setIconXY(15, 16);
    go_slide_1.setAction(buttonCallback);

    go_slide_4.setXY(415, 14);
    go_slide_4.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_NEXT_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_NEXT_ARROW_32_ID));
    go_slide_4.setIconXY(22, 15);
    go_slide_4.setAction(buttonCallback);

    go_slide_2.setXY(295, 14);
    go_slide_2.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_BACK_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_BACK_ARROW_32_ID));
    go_slide_2.setIconXY(22, 15);
    go_slide_2.setAction(buttonCallback);

    SWButtonHWLED.setBitmaps(Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID));
    SWButtonHWLED.setBitmapXY(0, 0);
    SWButtonHWLED.setText(TypedText(T_SINGLEUSEID2));
    SWButtonHWLED.setTextPosition(0, 16, 60, 60);
    SWButtonHWLED.setTextColors(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255), touchgfx::Color::getColorFrom24BitRGB(10, 10, 10));
    SWButtonHWLED.setPosition(39, 96, 60, 60);
    SWButtonHWLED.setAction(flexButtonCallback);

    SWButtonSWLED.setBitmaps(Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID));
    SWButtonSWLED.setBitmapXY(0, 0);
    SWButtonSWLED.setText(TypedText(T_SINGLEUSEID3));
    SWButtonSWLED.setTextPosition(0, 16, 60, 60);
    SWButtonSWLED.setTextColors(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255), touchgfx::Color::getColorFrom24BitRGB(10, 10, 10));
    SWButtonSWLED.setPosition(39, 165, 60, 60);
    SWButtonSWLED.setAction(flexButtonCallback);

    SwLedOn.setXY(381, 139);
    SwLedOn.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_RADIO_BUTTONS_RADIO_BUTTON_ACTIVE_ID));

    SwLedOff.setXY(381, 139);
    SwLedOff.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_RADIO_BUTTONS_RADIO_BUTTON_INACTIVE_ID));

    textPhysLED.setXY(122, 114);
    textPhysLED.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textPhysLED.setLinespacing(0);
    textPhysLED.setTypedText(touchgfx::TypedText(T_SINGLEUSEID4));

    textLogLED.setXY(122, 183);
    textLogLED.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textLogLED.setLinespacing(0);
    textLogLED.setTypedText(touchgfx::TypedText(T_SINGLEUSEID5));

    add(__background);
    add(box1);
    add(image1);
    add(go_slide_1);
    add(go_slide_4);
    add(go_slide_2);
    add(SWButtonHWLED);
    add(SWButtonSWLED);
    add(SwLedOn);
    add(SwLedOff);
    add(textPhysLED);
    add(textLogLED);
}

void Screen3ViewBase::setupScreen()
{

}

void Screen3ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &go_slide_1)
    {
        //go_slide_1
        //When go_slide_1 clicked change screen to Screen1
        //Go to Screen1 with screen transition towards West
        application().gotoScreen1ScreenCoverTransitionWest();
    }
    else if (&src == &go_slide_4)
    {
        //go_slide_4
        //When go_slide_4 clicked change screen to Screen4
        //Go to Screen4 with screen transition towards East
        application().gotoScreen4ScreenCoverTransitionEast();
    }
    else if (&src == &go_slide_2)
    {
        //go_slide_2
        //When go_slide_2 clicked change screen to Screen2
        //Go to Screen2 with screen transition towards West
        application().gotoScreen2ScreenCoverTransitionWest();
    }
}

void Screen3ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &SWButtonHWLED)
    {
        //SWButtonHWLED
        //When SWButtonHWLED clicked execute C++ code
        //Execute C++ code
        presenter->swButtonHwLedToggle();
    }
    else if (&src == &SWButtonSWLED)
    {
        //SWButtonSWLED
        //When SWButtonSWLED clicked execute C++ code
        //Execute C++ code
        presenter->swButtonSwLedToggle();
    }
}
