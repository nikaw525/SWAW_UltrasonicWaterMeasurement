/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen3_screen/Screen3ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

Screen3ViewBase::Screen3ViewBase() :
    buttonCallback(this, &Screen3ViewBase::buttonCallbackHandler)
{

    box1.setPosition(0, 0, 480, 272);
    box1.setColor(touchgfx::Color::getColorFrom24BitRGB(141, 178, 224));

    button_reset.setXY(299, 202);
    button_reset.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    button_reset.setLabelText(touchgfx::TypedText(T_SINGLEUSEID22));
    button_reset.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    button_reset.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    button_reset.setAction(buttonCallback);

    Ilosc_wody.setXY(240, 66);
    Ilosc_wody.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    Ilosc_wody.setLinespacing(0);
    Ilosc_wodyBuffer[0] = 0;
    Ilosc_wody.setWildcard(Ilosc_wodyBuffer);
    Ilosc_wody.resizeToCurrentText();
    Ilosc_wody.setTypedText(touchgfx::TypedText(T_SINGLEUSEID39));

    textArea2.setXY(35, 21);
    textArea2.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID40));

    bottle_1.setXY(34, 129);
    bottle_1.setProgressIndicatorPosition(-63, 56, 172, 79);
    bottle_1.setRange(0, 100);
    bottle_1.setDirection(touchgfx::AbstractDirectionProgress::UP);
    bottle_1.setBackground(touchgfx::Bitmap(BITMAP_BOTTLE_ID));
    bottle_1.setBitmap(BITMAP_BLUE_PROGRESSINDICATORS_FILL_TILING_PROGRESS_INDICATOR_FILL_GRADIENT_THIN_HORIZONTAL_ID);
    bottle_1.setValue(0);
    bottle_1.setAnchorAtZero(false);

    wynik_txt.setXY(91, 232);
    wynik_txt.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    wynik_txt.setLinespacing(0);
    wynik_txtBuffer[0] = 0;
    wynik_txt.setWildcard(wynik_txtBuffer);
    wynik_txt.resizeToCurrentText();
    wynik_txt.setTypedText(touchgfx::TypedText(T_SINGLEUSEID43));

    Are_you_sure_window.setBackground(touchgfx::BitmapId(BITMAP_DARK_BACKGROUNDS_MAIN_BG_320X240PX_ID), 80, 16);
    Are_you_sure_window.setShadeColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    Are_you_sure_window.setShadeAlpha(152);
    Are_you_sure_window.hide();

    button_yes_reset.setXY(68, 156);
    button_yes_reset.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID));
    button_yes_reset.setLabelText(touchgfx::TypedText(T_SINGLEUSEID23));
    button_yes_reset.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    button_yes_reset.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    button_yes_reset.setAction(buttonCallback);
    Are_you_sure_window.add(button_yes_reset);

    textArea1.setXY(48, 38);
    textArea1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID24));
    Are_you_sure_window.add(textArea1);

    button_no_reset.setXY(192, 156);
    button_no_reset.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID));
    button_no_reset.setLabelText(touchgfx::TypedText(T_SINGLEUSEID25));
    button_no_reset.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    button_no_reset.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    button_no_reset.setAction(buttonCallback);
    Are_you_sure_window.add(button_no_reset);

    add(box1);
    add(button_reset);
    add(Ilosc_wody);
    add(textArea2);
    add(bottle_1);
    add(wynik_txt);
    add(Are_you_sure_window);
}

void Screen3ViewBase::setupScreen()
{

}

//Called when the screen is done with transition/load
void Screen3ViewBase::afterTransition()
{
    //Enter_screen
    //When screen is entered execute C++ code
    //Execute C++ code
    presenter->OkButtonClicked();
}

void Screen3ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button_reset)
    {
        //Are_you_sure_window
        //When button_reset clicked show Are_you_sure_window
        //Show Are_you_sure_window
        Are_you_sure_window.setVisible(true);
        Are_you_sure_window.invalidate();
    }
    else if (&src == &button_yes_reset)
    {
        //Reset
        //When button_yes_reset clicked change screen to Screen2
        //Go to Screen2 with screen transition towards East
        application().gotoScreen2ScreenCoverTransitionEast();
    }
    else if (&src == &button_no_reset)
    {
        //Dont_reset
        //When button_no_reset clicked hide Are_you_sure_window
        //Hide Are_you_sure_window
        Are_you_sure_window.setVisible(false);
        Are_you_sure_window.invalidate();
    }
}
